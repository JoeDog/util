#!/usr/bin/python3
import os
import sys
import getpass
import subprocess
from   pathlib import Path

def run(cmd):
  """
  run a command and capture the output.

  :param cmd:  An option which allows server password logins (default no)
  :return:     A string output from the cmd
  """
  try:
    # stdout = subprocess.PIPE lets you redirect the output
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    proc.wait()
  except OSError:
    print("ERROR: unable to run {}".format(cmd))
    exit(1)

  res = proc.communicate()[0]
  if proc.returncode != 0:
    print("ERROR: {} exited with an error".format(cmd))
    print(str(res, 'utf-8'))
    exit(1)

  out = str(res, 'utf-8')
  return out.strip()

def main():
  tmp = getpass.getuser()
  print("Username ({}): ".format(tmp), end="")
  ret = input()
  usr = tmp if ret == "" else ret
  pwd = getpass.getpass("Password: ")
  url   = "https://raw.githubusercontent.com/JoeDog/util/main/src/org/joedog/util/"
  dirs  = [
    "{}/src/org/joedog/util".format(os.getcwd()), 
    "{}/src/org/joedog/util/io".format(os.getcwd()), 
    "{}/src/org/joedog/util/config".format(os.getcwd())
  ]
  files = [
    "DateUtils.java",
    "Debug.java",
    "NumberUtils.java",
    "RandomUtils.java",
    "RollingAverage.java",
    "Setup.java",
    "Sleep.java",
    "TextUtils.java",
    "config/Column.java",
    "config/Columns.java",
    "config/INI.java",
    "io/FileLineIterator.java",
    "io/FileLineReader.java",
    "io/FileUtils.java",
    "io/Logger.java"
  ]

  for d in dirs:
    path = Path(d)
    path.mkdir(parents=True, exist_ok=True)

  for f in files:
    out = "{}/{}".format(dirs[0], f)
    uri = "{}{}".format(url, f)
    cmd = "curl -k --user {}:{} -o {} {}".format(usr, pwd, out, uri)
    run(cmd)

if __name__ == '__main__':
  main()

